extends ../layout/index.pug

block append stylesheets
  link(rel='stylesheet' href='/login/index.css')

block content
  form#login.login-wrapper.columns(
    action='/login/authenticate'
    method='post'
    v-on:submit='onSubmit($event)'
  )
    .column.is-8.is-hidden-mobile.hero-banner
      section.hero.is-fullheight.is-dark
        .hero-content
          img(src='https://goo.gl/wA1Wq4' width='350px')
    .column.is-4
      section.hero.is-fullheight
        .hero-heading
          .section.branding
            img(src='https://goo.gl/mMLgtz' alt='Beta logo' height='50px')
            .brand-name BETA
        .hero-body
          .container
            .columns
              .column.is-8.is-offset-2
                h1.avatar.has-text-centered.section
                  img(src='https://goo.gl/spTorJ')
                .login-form
                  p.control.has-icon.has-icon-right
                    input.input.email-input(
                      type='text'
                      name='email'
                      placeholder='bot@beta.com'
                      autofocus
                      v-model='email'
                      v-bind:class="{ 'is-danger': (!validEmail && emailDirty) || (!authorized && !emailDirty && hasData), 'is-success': email }"
                      v-on:keydown='onEmailKeydown'
                    )
                    span.icon.user
                      i.fa.fa-user
                  p.help.is-danger(v-if='!email && emailDirty') Campo obrigatório
                  p.help.is-danger(v-if='!validEmail && email') Formato de email inválido

                  p.control.has-icon.has-icon-right
                    input.input.password-input(
                      type='password'
                      name='password'
                      placeholder='••••••••'
                      v-model='password'
                      v-bind:class="{ 'is-danger': (!password && passwordDirty) || (!authorized && !passwordDirty && hasData), 'is-success': password }"
                      v-on:keydown='onPasswordKeydown'
                    )
                    span.icon.user
                      i.fa.fa-lock
                  p.help.is-danger(v-if='!password && passwordDirty') Campo obrigatório
                  p.help.is-danger(v-if='!authorized && !passwordDirty && hasData') Email e/ou senha inválidos.

                  p.control.login
                    button.button.is-success.is-outlined.is-large.is-fullwidth Login

  script(type='text/javascript').
    var email, password = undefined
    var authorized = false
    var hasData = '#{data}' !== ''

    if (hasData) {
      email = '#{data && data.email}'
      password = '#{data && data.password}'
      authorized = '#{data && data.authorized}'
    }

    new Vue({
      el: '#login',
      data: {
        email: email,
        emailDirty: false,
        password: password,
        passwordDirty: false,
        authorized: authorized,
        hasData: hasData
      },
      computed: {
        validEmail: function () {
          return /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.email)
        }
      },
      methods: {
        onEmailKeydown: function () { this.emailDirty = true },
        onPasswordKeydown: function () { this.passwordDirty = true },
        onSubmit: function (event) {
          var validation = this.validEmail && this.password
          if (!validation) event.preventDefault()
        }
      }
    })
