pipeline:
  staging-build:
    image: node:12-alpine
    commands:
      - export GRAPHQL_URL=https://api-v2.staging.bonde.org/graphql
      - yarn global add pnpm
      - pnpm i
      - pnpm run lint
      - pnpm m run test
      - pnpm m run build
    when:
      event: [push]

  staging-beta-publish:
    image: plugins/docker
    repo: nossas/bonde-bot-beta
    secrets: [ docker_username, docker_password ]
    username: lpirola
    password: ${DOCKER_PASSWORD}
    dockerfile: packages/beta/Dockerfile
    group: publishing
    tags:
      - ${DRONE_BRANCH/\//-}
    when:
      status: success
      branch: [hotfix/*, feature/*, develop]

  staging-chatbot-publish:
    image: plugins/docker
    repo: nossas/bonde-bot-chatbot
    secrets: [ docker_username, docker_password ]
    username: lpirola
    password: ${DOCKER_PASSWORD}
    dockerfile: packages/chatbot/Dockerfile
    group: publishing
    tags:
      - ${DRONE_BRANCH/\//-}
    when:
      status: success
      branch: [hotfix/*, feature/*, develop]

  staging-beta-webserver-deploy:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: webservers/beta
    group: deploying
    docker_image: nossas/bonde-bot-beta:${DRONE_BRANCH/\//-}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [hotfix/*, feature/*, develop]

  staging-beta-worker-deploy:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: workers/bot-worker
    group: deploying
    docker_image: nossas/bonde-bot-beta:${DRONE_BRANCH/\//-}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [hotfix/*, feature/*, develop]

  staging-chatbot-webserver-deploy:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: webservers/chatbot
    group: deploying
    docker_image: nossas/bonde-bot-chatbot:${DRONE_BRANCH/\//-}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [hotfix/*, feature/*, develop]

  production-build:
    image: node:12-alpine
    commands:
      - export GRAPHQL_URL=https://api-v2.bonde.org/graphql
      - yarn global add pnpm
      - pnpm i
      - pnpm run lint
      - pnpm m run test
      - pnpm m run build
    when:
      event: tag

  production-beta-publish:
    image: plugins/docker
    repo: nossas/bonde-bot-beta
    dockerfile: packages/beta/Dockerfile
    secrets: [ docker_username, docker_password ]
    username: lpirola
    password: ${DOCKER_PASSWORD}
    group: publishing
    tags:
      - ${DRONE_TAG##v}
    when:
      status: success
      event: tag

  production-chatbot-publish:
    image: plugins/docker
    repo: nossas/bonde-bot-chatbot
    dockerfile: packages/chatbot/Dockerfile
    secrets: [ docker_username, docker_password ]
    username: lpirola
    password: ${DOCKER_PASSWORD}
    group: publishing
    tags:
      - ${DRONE_TAG##v}
    when:
      status: success
      event: tag

  production-beta-webservers-deploy:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: webservers/beta
    docker_image: "nossas/bonde-bot-beta:${DRONE_TAG##v}"
    timeout: 360
    confirm: true
    secrets:
      - source: rancher_access_key_prod
        target: rancher_access_key
      - source: rancher_secret_key_prod
        target: rancher_secret_key
    when:
      status: success
      event: tag

  production-beta-deploy-worker:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: workers/bot-worker
    docker_image: "nossas/bonde-bot-beta:${DRONE_TAG##v}"
    timeout: 360
    confirm: true
    secrets:
      - source: rancher_access_key_prod
        target: rancher_access_key
      - source: rancher_secret_key_prod
        target: rancher_secret_key
    when:
      status: success
      event: tag

  production-chatbot-webservers-deploy:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: webservers/chatbot
    docker_image: "nossas/bonde-bot-chatbot:${DRONE_TAG##v}"
    timeout: 360
    confirm: true
    secrets:
      - source: rancher_access_key_prod
        target: rancher_access_key
      - source: rancher_secret_key_prod
        target: rancher_secret_key
    when:
      status: success
      event: tag
notify:
  image: plugins/slack
  channel: bonde_bots
  username: CI - ${DRONE_REPO_NAME}
  secrets: [ slack_webhook ]
  when:
    event: [ push, tag, build, publish, deployment, pull_request ]
    status: [ success, failure ]

services:
database:
  image: postgres:9.6
  # commands:
    # - psql -c 'create database bonde; create schema postgraphql;' -hpostgres -Upostgres

api-v2:
  image: nossas/bonde-graphql
  commands:
    - export SCHEMA_NAME=postgraphql
    - export DATABASE_URL=postgres://postgres@database/postgres
    - export JWT_SECRET=create_new_token
    - export JWT_TYPE=postgraphql.jwt_token
    - export PG_DEFAULT_ROLE=postgres
